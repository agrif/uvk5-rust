[env]

# python version is more lax than rust version
# which we need because our vendor svd is JANK
SVDTOOLS = "svd"

CARGO = "cargo"
SVD2RUST = "svd2rust"
FORM = "form"
SVDFILE = "svd/dp32g030.vendor.svd"

[tasks.default]
alias = "all"

[tasks.all]
dependencies = ["svd2rust", "memorymap", "check"]

[tasks.clean]
dependencies = ["clean-generated"]

[tasks.clean-generated]
script_runner = "@duckscript"
script = '''
rm ${SVDFILE}.patched svd/memorymap.txt
rm lib.rs build.rs device.x
rm -r src/
'''

[tasks.patch-svd]
condition = {files_modified = {input = ["${SVDFILE}", "svd/*.yaml"], output = ["${SVDFILE}.patched"]}}
command = "${SVDTOOLS}"
args = ["patch", "svd/main.yaml"]

[tasks.memorymap]
dependencies = ["patch-svd"]
condition = {files_modified = {input = ["${SVDFILE}.patched"], output = ["svd/memorymap.txt"]}}
script_runner = "@duckscript"
script = '''
output = exec ${SVDTOOLS} mmap ${SVDFILE}.patched
writefile "svd/memorymap.txt" ${output.stdout}
'''

[tasks.svd2rust]
dependencies = ["patch-svd"]
condition = {files_modified = {input = ["${SVDFILE}.patched"], output = ["src/lib.rs"]}}
script_runner = "@duckscript"
script = '''
exec ${SVD2RUST} -c svd2rust.toml -i ${SVDFILE}.patched
rm -r src
exec ${FORM} -i lib.rs -o src/
rm lib.rs
exec ${CARGO} fmt -- --config-path=rustfmt.toml
'''

[tasks.check]
clear = true
dependencies = ["svd2rust"]
command = "${CARGO}"
args = ["check", "--all-features"]

[tasks.doc]
dependencies = ["svd2rust"]
command = "${CARGO}"
args = ["doc", "--all-features"]
