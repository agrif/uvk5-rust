name: Build and Test
on: [push]
jobs:
  generate-pac:
    name: Generate PAC
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: pip install svdtools

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: thumbv6m-none-eabi
          components: rustfmt
      - uses: baptiste0928/cargo-install@v3
        with:
          crate: svd2rust
      - uses: baptiste0928/cargo-install@v3
        with:
          crate: form
      - uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-make

      - run: cargo make
        working-directory: dp32g030

      - uses: actions/upload-artifact@v4
        with:
          name: generated-pac
          path: |
            dp32g030/svd/dp32g030.vendor.svd.patched
            dp32g030/svd/memorymap.txt
            dp32g030/build.rs
            dp32g030/device.x
            dp32g030/src
      - uses: actions/upload-artifact@v4
        with:
          name: memorymap.txt
          path: dp32g030/svd/memorymap.txt

  hal:
    name: HAL
    runs-on: ubuntu-latest
    needs: generate-pac
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: thumbv6m-none-eabi
      - uses: actions/download-artifact@v4
        with:
          name: generated-pac
          path: dp32g030

      - run: cargo build --all-features
        working-directory: dp32g030-hal

  firmware:
    name: Firmware
    runs-on: ubuntu-latest
    needs: generate-pac
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: thumbv6m-none-eabi
      - uses: actions/download-artifact@v4
        with:
          name: generated-pac
          path: dp32g030

      - run: cargo build --release
        working-directory: k5firmware

      - uses: actions/upload-artifact@v4
        with:
          name: firmware-elf.zip
          path: k5firmware/target/thumbv6m-none-eabi/release/k5firmware

  firmware-pack:
    name: Firmware Pack
    runs-on: ubuntu-latest
    needs: [firmware, tool-linux]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: firmware-elf.zip
      - uses: actions/download-artifact@v4
        with:
          name: k5tool-linux.zip

      - run: chmod +x ./k5tool
      - run: |
          echo "### Firmware Summary" >> $GITHUB_STEP_SUMMARY
          echo "~~~~" >> $GITHUB_STEP_SUMMARY
          ./k5tool pack k5firmware k5firmware.packed.bin 2>&1 | tee -a $GITHUB_STEP_SUMMARY
          echo "~~~~" >> $GITHUB_STEP_SUMMARY

      - uses: actions/upload-artifact@v4
        with:
          name: firmware-packed.zip
          path: k5firmware.packed.bin

  lib:
    name: Tool Library
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - run: cargo build --all-features
        working-directory: k5lib
      - run: cargo test --all-features
        working-directory: k5lib

  tool:
    name: Tool
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      # not really sure what pulls this in, maybe serialport
      - run: sudo apt-get install -y libudev-dev

      - run: cargo build
        working-directory: k5tool
      - run: cargo test
        working-directory: k5tool

  tool-linux:
    name: Tool Release (linux, MUSL)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl

      - run: cargo build --release --target=x86_64-unknown-linux-musl
        working-directory: k5tool

      - uses: actions/upload-artifact@v4
        with:
          name: k5tool-linux.zip
          path: k5tool/target/x86_64-unknown-linux-musl/release/k5tool

  tool-windows:
    name: Tool Release (windows)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - run: cargo build --release
        working-directory: k5tool

      - uses: actions/upload-artifact@v4
        with:
          name: k5tool-windows.zip
          path: k5tool/target/release/k5tool.exe
